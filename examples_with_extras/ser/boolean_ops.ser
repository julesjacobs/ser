request boolean_test {
  // Basic operations
  a := 1;
  b := 0;
  
  // NOT operator
  c := !a;
  d := !b;
  
  // AND operator
  e := a && a;
  f := a && b;
  g := b && b;
  
  // OR operator
  h := a || a;
  i := a || b;
  j := b || b;
  
  // Complex boolean expressions
  k := a && (b || !b);
  l := !a || (a && b);
  m := (!a && b) || (a && !b);
  
  // Boolean operators in conditional contexts
  if (a && !b) {
    n := 42
  } else {
    n := 0
  };
  
  // Short-circuit behavior
  o := 0 && (yield; 1);
  p := 1 || (yield; 0);
  
  yield
}